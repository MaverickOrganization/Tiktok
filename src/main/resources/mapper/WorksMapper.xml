<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mybatis-3-mapper.dtd:约束文件的名称，限制和检查在当前文件中出现的标签和属性符合mybatis的要求-->
<!--namespace：命名空间，要有唯一的值，要求使用dao接口的权限定名称（一个dao接口对应一个mapper，namespace指明对应哪个dao接口）-->
<mapper namespace="com.dy.dyweb.mapper.WorksMapper">
    <!-- 所有的数据库操作都要写在mapper标签中，可以使用特定的标签表示数据库中的特定操作 -->
    <select id="getUserAllWorks" parameterType="WorksDao" resultType="WorksDao">
        select works_id, u.user_id, username, user_pic, title, url, create_time, update_time
            from Works w, User u where w.user_id = u.user_id and w.user_id = #{userId} limit #{page}, #{rows}
    </select>

    <select id="getAllWorks" parameterType="WorksDao" resultType="WorksDao">
        select works_id, u.user_id, username, user_pic, title, url, create_time, update_time
            from Works w, User u where w.user_id = u.user_id limit #{page}, #{rows}
    </select>

    <insert id="addWorks" parameterType="WorksDao">
        insert into Works values (0, #{userId}, #{title}, #{url}, now(), now())
    </insert>

    <delete id="deleteWorks" parameterType="Long">
        delete from Works where works_id = #{worksId}
    </delete>

    <update id="updateWorks" parameterType="WorksDao">
        update Works set title = #{title}, url = #{url}, update_time = now() where works_id = #{worksId}
    </update>
</mapper>