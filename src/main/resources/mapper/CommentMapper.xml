<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mybatis-3-mapper.dtd:约束文件的名称，限制和检查在当前文件中出现的标签和属性符合mybatis的要求-->
<!--namespace：命名空间，要有唯一的值，要求使用dao接口的权限定名称（一个dao接口对应一个mapper，namespace指明对应哪个dao接口）-->
<mapper namespace="com.dy.dyweb.mapper.CommentMapper">
    <!-- 所有的数据库操作都要写在mapper标签中，可以使用特定的标签表示数据库中的特定操作 -->
    <resultMap id="CommentClassResult" type="CommentDao">
        <result property="worksId" column="works_id"/>
        <result property="username" column="username"/>
        <result property="userPic" column="user_pic"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="referredUserId" column="referred_user_id" javaType="java.util.List" typeHandler="com.dy.dyweb.base.ListToVarcharTypeHandler"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="userId" column="user_id"/>
        <result property="replyUserId" column="reply_user_id"
        />

    </resultMap>
    <select id="getCommentInfo" parameterType="CommentDao" resultMap="CommentClassResult">
        select usernme, user_pic, works_id, parent_comment_id, referred_user_id, reply_user_id, content, create_time
            from User u, Comment c where c.user_id = u.user_id and works_id = #{worksId}
            <if test="parentCommentId != null and parentCommentId != '' and parentCommentId != -1">
                and parent_comment_id = #{parentCommentId}
            </if>
             limit #{page}, #{rows}
    </select>

    <insert id="addComment" parameterType="CommentDao">
        insert into Comment values (0, #{worksId}, #{parentCommentId}, #{userId}, #{referredUserId}, #{replyUserId},
                                    #{content}, now())
    </insert>

    <delete id="deleteComment" parameterType="Long">
        delete from Comment where comment_id = #{commentId}
    </delete>
</mapper>